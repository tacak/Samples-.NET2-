【C#用】
【WCF サービス アプリケーションのみを利用する場合】
　サービスファイル(○○.svc)とサービスクラス(○○.svc.cs)クラスの雛型を
　「新しい項目の追加」で、「WCF サービスクラス(○○：コード分離モデル)」を利用して
　適切な場所に配置してください。


【WCF サービス アプリケーションを複数の「業務(個別・共通) プロジェクト」で構成する場合】
以下の記述を参照してください。

WCF サービス アプリケーションのフォルダ階層は、以下のような構造を推奨します。

<プロジェクトルートフォルダ>
  +<業務名1>
    +Service
      +○○.svc
      +○○.svc
      +○○.svc
  +<業務名2>
    +Service
      +○○.svc
      +○○.svc
      +○○.svc

これにより、業務ごとに、プロジェクト分割が容易になります。

この場合、
① 「新しいプロジェクトの追加」で
　「<WCF サービス アプリケーション名>.<業務名>」という名前の
　「業務(個別・共通) プロジェクト」を作成します。

　例．
　<WCF サービス アプリケーション名>が「CalcWebService」、<業務名>が「A01」の場合
　「CalcWebService.A01」という名前にします。


② <WCF サービス アプリケーション>の、<業務名> フォルダに、
　「新しい項目の追加」で、「WCF サービスクラスetc」を作成します。
　これにより、サービスファイル(○○.svc)とサービスクラス(○○.cs)の雛型が作成されます。


③ ①で作成した「業務(個別・共通) プロジェクト」の「Service」フォルダに、
　②で作成したサービスクラス(○○.cs)を移動します。

これにより、サービスファイル(○○.svc)のURIが呼び出されると、
Web.configの設定情報がなくても、サービスクラス(○○.cs)が実行されます。

【ポイント】
※ フレームワークのデフォルト動作では、
　BaseNamespaceとサービスファイル(○○.svc)の相対パスからクラス名を推測しています。
　サービスクラス(○○.cs)が実行されない場合は、サービスクラスのFullNameを確認してください。

　例．
　BaseNamespaceが「Abc.Def」、「サービスファイル(○○.svc)の相対パス」が「Ghi\Jkl.svc」の場合
　Abc.Def.Ghi.Jkiのサービスクラスを呼び出します。

※ 「プロジェクト名」に任意の名前を利用したい場合は、プロジェクトのプロパティの「既定の名前空間」に
　適切な名前空間を指定してください。

※ 「業務(個別・共通) プロジェクト」を、VBで作成する場合は、
　　名前空間の解釈がC#の場合と異なりますので注意してください。
　　詳細は、VB用の「WCF サービス アプリケーション」のreadme.txtを確認して下さい。

※ アプリケーションのリリース前には、このファイル(readme.txt)を削除してくさい。

