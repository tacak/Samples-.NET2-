<?xml version="1.0" encoding="utf-8"?>
<!--
    メモ: このファイルを手動で編集する代わりに、Web 管理ツールを使用 
    してアプリケーションの設定を構成することができます。Visual Studio 
    の [Web サイト] メニューにある [ASP.NET 構成] オプションから設定
    を行ってください。設定およびコメントの一覧は、通常
    \Windows\Microsoft.Net\Framework\v2.x\Config にある
    machine.config.comments で確認できます。 
-->
<configuration>
  <configSections>
    <sectionGroup name="system.web.extensions" type="System.Web.Configuration.SystemWebExtensionsSectionGroup, System.Web.Extensions, Version=3.5.0.0, Culture=neutral, PublicKeyToken=31BF3856AD364E35">
      <sectionGroup name="scripting" type="System.Web.Configuration.ScriptingSectionGroup, System.Web.Extensions, Version=3.5.0.0, Culture=neutral, PublicKeyToken=31BF3856AD364E35">
        <section name="scriptResourceHandler" type="System.Web.Configuration.ScriptingScriptResourceHandlerSection, System.Web.Extensions, Version=3.5.0.0, Culture=neutral, PublicKeyToken=31BF3856AD364E35" requirePermission="false" allowDefinition="MachineToApplication"/>
        <sectionGroup name="webServices" type="System.Web.Configuration.ScriptingWebServicesSectionGroup, System.Web.Extensions, Version=3.5.0.0, Culture=neutral, PublicKeyToken=31BF3856AD364E35">
          <section name="jsonSerialization" type="System.Web.Configuration.ScriptingJsonSerializationSection, System.Web.Extensions, Version=3.5.0.0, Culture=neutral, PublicKeyToken=31BF3856AD364E35" requirePermission="false" allowDefinition="Everywhere" />
          <section name="profileService" type="System.Web.Configuration.ScriptingProfileServiceSection, System.Web.Extensions, Version=3.5.0.0, Culture=neutral, PublicKeyToken=31BF3856AD364E35" requirePermission="false" allowDefinition="MachineToApplication" />
          <section name="authenticationService" type="System.Web.Configuration.ScriptingAuthenticationServiceSection, System.Web.Extensions, Version=3.5.0.0, Culture=neutral, PublicKeyToken=31BF3856AD364E35" requirePermission="false" allowDefinition="MachineToApplication" />
          <section name="roleService" type="System.Web.Configuration.ScriptingRoleServiceSection, System.Web.Extensions, Version=3.5.0.0, Culture=neutral, PublicKeyToken=31BF3856AD364E35" requirePermission="false" allowDefinition="MachineToApplication" />
        </sectionGroup>
      </sectionGroup>
    </sectionGroup>
  </configSections>
  <appSettings/>
  <connectionStrings/>

  <system.web>
    <!--
            デバッグ シンボルをコンパイルされたページに挿入するに
            は、compilation debug="true" に設定します。この設
            定はパフォーマンスに影響するため、開発時のみこの値
            を true に設定してください。
    -->
    <compilation debug="true">
      <assemblies>
        <add assembly="System.Core, Version=3.5.0.0, Culture=neutral, PublicKeyToken=B77A5C561934E089"/>
        <add assembly="System.Web.Extensions, Version=3.5.0.0, Culture=neutral, PublicKeyToken=31BF3856AD364E35"/>
      </assemblies>

    </compilation>
    <!--
          <authentication> セクションは、ユーザーを識別するため
          に、ASP.NET で使用されるセキュリティ認証モードの構成
          を有効にします。 
      -->
    <authentication mode="Windows" />
    <!--
          <customErrors> セクションは、要求の実行中にハンドル
          されていないエラーが発生した場合の処理方法の構成を
          有効にします。具体的には、開発者が HTML エラー ペ
          ージをスタック トレースのエラーの代わりに表示するように構
          成することを可能にします。

      <customErrors mode="RemoteOnly" defaultRedirect="GenericErrorPage.htm">
          <error statusCode="403" redirect="NoAccess.htm" />
          <error statusCode="404" redirect="FileNotFound.htm" />
      </customErrors>
      -->
    <pages>
      <controls>
        <add tagPrefix="asp" namespace="System.Web.UI" assembly="System.Web.Extensions, Version=3.5.0.0, Culture=neutral, PublicKeyToken=31BF3856AD364E35"/>
      </controls>
    </pages>
    <httpHandlers>
      <remove verb="*" path="*.asmx"/>
      <add verb="*" path="*.asmx" validate="false" type="System.Web.Script.Services.ScriptHandlerFactory, System.Web.Extensions, Version=3.5.0.0, Culture=neutral, PublicKeyToken=31BF3856AD364E35"/>
      <add verb="*" path="*_AppService.axd" validate="false" type="System.Web.Script.Services.ScriptHandlerFactory, System.Web.Extensions, Version=3.5.0.0, Culture=neutral, PublicKeyToken=31BF3856AD364E35"/>
      <add verb="GET,HEAD" path="ScriptResource.axd" type="System.Web.Handlers.ScriptResourceHandler, System.Web.Extensions, Version=3.5.0.0, Culture=neutral, PublicKeyToken=31BF3856AD364E35" validate="false"/>
    </httpHandlers>
    <httpModules>
      <add name="ScriptModule" type="System.Web.Handlers.ScriptModule, System.Web.Extensions, Version=3.5.0.0, Culture=neutral, PublicKeyToken=31BF3856AD364E35"/>
    </httpModules>
  </system.web>
  <system.codedom>
    <compilers>
      <compiler language="c#;cs;csharp" extension=".cs" warningLevel="4"                  type="Microsoft.CSharp.CSharpCodeProvider, System, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089">
        <providerOption name="CompilerVersion" value="v3.5"/>
        <providerOption name="WarnAsError" value="false"/>
      </compiler>
    </compilers>
  </system.codedom>

  <system.web.extensions>
    <scripting>
      <webServices>
        <!--
            認証サービスを有効にするには、このセクションのコメントを解除します。
            必要に応じて、requireSSL="true" を含めます。

        <authenticationService enabled="true" requireSSL = "true|false"/>
        -->
        <!--
            プロファイル サービスを有効にして、ASP.NET AJAX アプリケーションで
            取得して変更できるプロファイル プロパティを選択するには、これらの行の
            コメントを解除します。

        <profileService enabled="true"
                        readAccessProperties="propertyname1,propertyname2"
                        writeAccessProperties="propertyname1,propertyname2" />
        -->
        <!--
            役割サービスを有効にするには、このセクションのコメントを解除します。

        <roleService enabled="true"/>
        -->
      </webServices>
      <!--
      <scriptResourceHandler enableCompression="true" enableCaching="true" />
      -->
    </scripting>
  </system.web.extensions>
  <!--
      インターネット インフォメーション サービス 7.0 で ASP.NET AJAX を実行するには、
      system.webServer セクションが必要です。以前のバージョンの IIS の場合は必要ありません。
  -->
  <system.webServer>
    <validation validateIntegratedModeConfiguration="false"/>
    <modules>
      <add name="ScriptModule" preCondition="integratedMode" type="System.Web.Handlers.ScriptModule, System.Web.Extensions, Version=3.5.0.0, Culture=neutral, PublicKeyToken=31BF3856AD364E35"/>
    </modules>
    <handlers>
      <remove name="WebServiceHandlerFactory-Integrated"/>
      <add name="ScriptHandlerFactory" verb="*" path="*.asmx" preCondition="integratedMode"
           type="System.Web.Script.Services.ScriptHandlerFactory, System.Web.Extensions, Version=3.5.0.0, Culture=neutral, PublicKeyToken=31BF3856AD364E35"/>
      <add name="ScriptHandlerFactoryAppServices" verb="*" path="*_AppService.axd" preCondition="integratedMode"
           type="System.Web.Script.Services.ScriptHandlerFactory, System.Web.Extensions, Version=3.5.0.0, Culture=neutral, PublicKeyToken=31BF3856AD364E35"/>
      <add name="ScriptResource" preCondition="integratedMode" verb="GET,HEAD" path="ScriptResource.axd" type="System.Web.Handlers.ScriptResourceHandler, System.Web.Extensions, Version=3.5.0.0, Culture=neutral, PublicKeyToken=31BF3856AD364E35" />
    </handlers>
  </system.webServer>
  <system.serviceModel>
    <bindings>
      <wsHttpBinding>
        <!-- DefaultServiceHostFactoryのBindingの設定（デフォルト） -->
        <binding name="DefaultBinding" />
        <!-- MtomServiceHostFactoryのBindingの設定(Mtom) -->
        <binding name="MtomBinding" messageEncoding="Mtom"
                 closeTimeout="00:01:00" openTimeout="00:01:00" receiveTimeout="10:00:00" sendTimeout="00:01:00"
                maxBufferPoolSize="524288" maxReceivedMessageSize="10485760">
          <readerQuotas maxDepth="32" maxStringContentLength="8192" maxArrayLength="10485760"
               maxBytesPerRead="4096" maxNameTableCharCount="16384" />
        </binding>
      </wsHttpBinding>
      <basicHttpBinding>
        <!-- MtomStreamedServiceHostFactoryのBindingの設定（Mtomストリーミング転送モード） -->
        <binding name="MtomStreamedBinding" messageEncoding="Mtom" transferMode="Streamed"
                 closeTimeout="00:01:00" openTimeout="00:01:00" receiveTimeout="10:00:00" sendTimeout="00:01:00"
                 maxBufferSize="65536" maxBufferPoolSize="524288" maxReceivedMessageSize="10485760"/>
      </basicHttpBinding>
    </bindings>
    <behaviors>
      <serviceBehaviors>
        <!-- デフォルトのServiceBehaviorの設定 -->
        <behavior name="DefaultServiceBehavior">
          <serviceMetadata httpGetEnabled="true"/>
          <serviceDebug includeExceptionDetailInFaults="true"/>
        </behavior>
      </serviceBehaviors>
      <!-- デフォルトのEndpointBehaviorの設定 -->
      <endpointBehaviors>
        <behavior name="DefaultEndpointBehavior">
        </behavior>
      </endpointBehaviors>
    </behaviors>
    <services>
    </services>
    <!-- WCFトレースの設定 -->
    <!--
    <diagnostics>
      <messageLogging logEntireMessage="true"
                      logMalformedMessages="false"
                      logMessagesAtServiceLevel="true"
                      logMessagesAtTransportLevel="false"
                      maxMessagesToLog="3000"
                      maxSizeOfMessageToLog="200000"/>
    </diagnostics>
    -->
  </system.serviceModel>
  <!-- ログの設定 -->
  <system.diagnostics>
    <sources>
      <!-- Terasoluna.dllに存在するクラスのデフォルトログ -->
      <source name="Terasoluna" switchName="FrameworkLogSwitch" switchType="System.Diagnostics.SourceSwitch">
        <listeners>
          <add name="XMLLogFile"/>
          <add name="ConsoleLog"/>
          <remove name="Default"/>
        </listeners>
      </source>
      <!-- Terasoluna.Server.ServiceModel.dllに存在するクラスのデフォルトログ -->
      <source name="Terasoluna.Server.ServiceModel" switchName="FrameworkLogSwitch" switchType="System.Diagnostics.SourceSwitch">
        <listeners>
          <add name="XMLLogFile"/>
          <add name="ConsoleLog"/>
          <remove name="Default"/>
        </listeners>
      </source>
      <!-- CalcWcfServiceAppに存在するクラスのデフォルトログ -->
      <source name="CalcWcfServiceApp" switchName="DefaultLogSwitch" switchType="System.Diagnostics.SourceSwitch">
        <listeners>
          <add name="XMLLogFile"/>
          <add name="ConsoleLog"/>
          <remove name="Default"/>
        </listeners>
      </source>
      <!-- CalcWcfBussinessApplication.dllに存在するクラスのデフォルトログ -->
      <source name="CalcWcfBusinessApplication" switchName="DefaultLogSwitch" switchType="System.Diagnostics.SourceSwitch">
        <listeners>
          <add name="XMLLogFile"/>
          <add name="ConsoleLog"/>
          <remove name="Default"/>
        </listeners>
      </source>

      <!-- WCFトレースの設定 -->
      <!--
      <source name="System.ServiceModel" switchValue="Information, ActivityTracing" propagateActivity="true">
        <listeners>
          <add name="WCFTraceLog" />
        </listeners>
      </source>
      
      <source name="System.ServiceModel.MessageLogging">
        <listeners>
          <add name="WCFTraceLog" />
        </listeners>
      </source>
      -->
    </sources>
    <switches>
      <add name="FrameworkLogSwitch" value="Information"/>
      <add name="DefaultLogSwitch" value="Verbose"/>
    </switches>
    <sharedListeners>
      <!-- イベントログ -->
      <add name="EventLog" type="System.Diagnostics.EventLogTraceListener" initializeData="sample application"/>
      <!-- コンソールログ(Verboseレベル) -->
      <add name="ConsoleLog" type="System.Diagnostics.ConsoleTraceListener">
        <filter type="System.Diagnostics.EventTypeFilter" initializeData="Verbose"/>
      </add>
      <!-- ログファイル(Infomationレベル） -->
      <add name="LogFile" type="System.Diagnostics.TextWriterTraceListener" initializeData=".\Log.txt" traceOutputOptions="DateTime, ProcessId, ThreadId">
        <filter type="System.Diagnostics.EventTypeFilter" initializeData="Information"/>
      </add>
      <!-- カンマ区切り形式ログファイル -->
      <add name="DelimitedLogFile" type="System.Diagnostics.DelimitedListTraceListener" delimiter="," initializeData="DelemitedLog.txt" traceOutputOptions="DateTime, ProcessId, ThreadId"/>
      <!-- XML形式のログファイル -->
      <add name="XMLLogFile" type="System.Diagnostics.XmlWriterTraceListener" initializeData="C:\TEMP\WcfXMLLog.svclog" traceOutputOptions="DateTime, ProcessId, ThreadId">
      </add>
      <!-- WCFトレース用 -->
      <add name="WCFTraceLog" type="System.Diagnostics.XmlWriterTraceListener" initializeData= "C:\TEMP\WcfSeverTraces.svclog" />
    </sharedListeners>
  </system.diagnostics>
</configuration>
