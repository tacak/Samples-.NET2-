<?xml version="1.0" encoding="utf-8" ?>
<!-- デザイン時に必要なため、個別業務のプロジェクトにも
     エントリプロジェクトのTerasolunaApplication.configと同じものと配置
     個別プロジェクトへのコピーはビルドスクリプトで走るようになっている
     -->
<configuration>
  <configSections>
    <section name="unity"
             type="Microsoft.Practices.Unity.Configuration.UnityConfigurationSection,
                   Microsoft.Practices.Unity.Configuration,
                   Version=1.2.0.0,
                   Culture=neutral,
                   PublicKeyToken=31bf3856ad364e35" />
  </configSections>
  <unity>
    <typeAliases>
      <!-- LifetimeManagerの定義 -->
      <typeAlias alias="singleton"
                 type="Microsoft.Practices.Unity.ContainerControlledLifetimeManager,
                       Microsoft.Practices.Unity,
                       Version=1.2.0.0,
                       Culture=neutral,
                       PublicKeyToken=31bf3856ad364e35" />
      <typeAlias alias="external"
                 type="Microsoft.Practices.Unity.ExternallyControlledLifetimeManager,
                       Microsoft.Practices.Unity,
                       Version=1.2.0.0,
                       Culture=neutral,
                       PublicKeyToken=31bf3856ad364e35" />
      <!-- 型の定義 -->
      <typeAlias alias="int" type="System.Int32" />
      <typeAlias alias="Uri" type="System.Uri, System, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" />
      <typeAlias alias="IAddressReplacer"
                 type="Terasoluna.ServiceModel.IAddressReplacer,
                       Terasoluna" />
      <typeAlias alias="MappingAddressReplacer"
                 type="Terasoluna.ServiceModel.MappingAddressReplacer,
                       Terasoluna" />
    </typeAliases>
    <containers>
      <container>
        <types>
          <!-- サーバ通信機能のアドレス置換設定 -->
          <!-- プロジェクト固有の通信先を利用する場合は、以下のコメント化を解除し、設定して下さい -->
          <!--
          <type name="localhostToDnsName"
                type="IAddressReplacer" mapTo="MappingAddressReplacer">
            <lifetime type="singleton" />
            <typeConfig>
              <property name="Order" propertyType ="int">
                <value value="0" type="int"/>
              </property>
              <property name="FromUri" propertyType ="Uri">
                <value value="http://localhost:18080/" type="Uri"/>
              </property>
              <property name="ToUri" propertyType ="Uri">
                <value value="http://localhost/CalcWcfService/" type="Uri"/>
              </property>
            </typeConfig>
          </type>
          -->
        </types>
        <extensions>
          <!-- プロジェクト固有の定義を利用する場合は、 以下のクラスの実装クラスを用意し、指定して下さい -->

          <!-- ビジネスロジック実行 -->
          <!--<add type="○○.BizLogic.△△BizLogicExtension,
                     ○○" />-->
          <!-- イベント処理フロー定義 -->
          <!--<add type="○○.Events.△△EventProcessExtension,
                     ○○" />-->
          <!-- コードリスト管理機能の設定 -->
          <!--<add type="○○.Code.△△SelectableValuesExtension,
                     ○○" />-->
        </extensions>
      </container>
    </containers>
  </unity>
</configuration>